name: API Testing with Keploy AI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    
    services:
      mongodb:
        image: mongo:6.0
        ports:
          - 27017:27017
        options: >-
          --health-cmd="mongosh --eval 'db.runCommand({ping: 1})'"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=5

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Generate OpenAPI Specification
      run: npm run generate-openapi

    - name: Upload OpenAPI Spec
      uses: actions/upload-artifact@v4
      with:
        name: openapi-spec
        path: |
          openapi.json
          openapi.yaml

    - name: Run Jest Tests
      run: npm test
      env:
        NODE_ENV: test

    - name: Install Keploy
      run: |
        curl --silent --location "https://github.com/keploy/keploy/releases/latest/download/keploy_linux_amd64.tar.gz" | tar xz -C /tmp
        sudo mkdir -p /usr/local/bin && sudo mv /tmp/keploy /usr/local/bin

    - name: Start Application in Background
      run: |
        npm start &
        APP_PID=$!
        echo "APP_PID=$APP_PID" >> $GITHUB_ENV
        sleep 15
      env:
        NODE_ENV: development
        MONGODB_URI: mongodb://localhost:27017/bookapi_test

    - name: Wait for Application to be Ready
      run: |
        for i in {1..30}; do
          if curl -f http://localhost:5000/ > /dev/null 2>&1; then
            echo "Application is ready!"
            break
          fi
          echo "Waiting for application... ($i/30)"
          sleep 2
        done

    - name: Record API Tests with Keploy
      run: |
        echo "Recording API interactions..."
        keploy record -c "node test-api.js" --delay 2 &
        KEPLOY_PID=$!
        sleep 20
        kill $KEPLOY_PID || true
      continue-on-error: true

    - name: Run Keploy AI Tests
      run: |
        echo "Running Keploy AI tests..."
        keploy test -c "npm start" --delay 10 --coverage
      continue-on-error: true

    - name: Upload Keploy Test Reports
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: keploy-reports
        path: |
          keploy/
          *.yaml
          coverage/

    - name: Create Test Report Summary
      if: always()
      run: |
        echo "## 📊 Test Results Summary" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "### Jest Unit Tests" >> $GITHUB_STEP_SUMMARY
        echo "✅ Unit tests completed" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "### Keploy AI API Tests" >> $GITHUB_STEP_SUMMARY
        echo "🤖 AI-powered API tests executed" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "### OpenAPI Specification" >> $GITHUB_STEP_SUMMARY
        echo "📝 API documentation generated successfully" >> $GITHUB_STEP_SUMMARY

    - name: Stop Application
      if: always()
      run: |
        if [ ! -z "$APP_PID" ]; then
          kill $APP_PID || true
        fi

  build:
    needs: test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Generate OpenAPI Documentation
      run: npm run generate-openapi
      
    - name: Build application
      run: echo "✅ Building application for production..."
      
    - name: Deploy to staging
      run: echo "🚀 Deploying to staging environment..."
